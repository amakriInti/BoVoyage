===========================================================================================
Csv to database dans le projet Batch (Upload Person):
1.LectureCsv
2. On déclare le httpClient 
3. On lui envoie les objet en json
4. On récupère le résultat 

Objectif : Collecte de voyages 

-Fichiers csv exemple:
Agence;Libelle;DateAller;DateRetour;Max;PrixVenteTotal;Description
Go Voyage; Plaisirs d'Asie;07/07/2021;9;4500;Description géniale 1 

Donc on  est dans la couche donnée

===========================================================================================
using BoVoyage.Scenario1.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.IO;

namespace BoVoyage.Scenario1.Dal
{
    public class Repository
    {
        private static string path_csv = "Voyages.csv";
        private Model1 Context = new Model1();
        internal List<string> GetAllMails(StatutEnum statut)
        {
            var liste = Context.Employe.ToList();
            return liste
                .Where(e => (StatutEnum)e.Statut == statut)
                .Select(e => e.Login)
                .ToList();
        }

        private static List<Voyage> LectureCsv()
        {
            List<Voyage> vy = new List<Voyage>();

            // Lecture du fichier csv -> ps
            foreach (var ligne in File.ReadAllLines(path_csv))
            {
                var tab = ligne.Split(';');
                vy.Add(new Voyage { Agence = tab[0], Libelle = tab[1], DateAller = Convert.ToDateTime(tab[2]), DateRetour= Convert.ToDateTime(tab[3]), MaxVoyageurs = Convert.ToByte(tab[4]), PrixAchatTotal = Convert.ToDecimal(tab[5]),Description = tab[6] });
                vy.Add(new Voyage { Nom = tab[0], Ville = tab[1] });
            }
            return ps;
        }
    }
}
===========================================================================================
Lire le fichier CSV : ok
Faire en sorte que cette action ne soit accessible qu'au commerciaux

Pour ça il faut des employés => requete sql :
use BoVoyageDB
go 
insert into Employe (Id,[Login],MotDePasse,Statut) values (NEWID(), 'ali@bovoyage.com', 'P@ssw0rd',2)
insert into Employe (Id,[Login],MotDePasse,Statut) values (NEWID(), 'andre@bovoyage.com', 'P@ssw0rd',1)
go

(à demander : correspondance entre les tables user et Employe)

On a pu mettre ça dans le comm controller qui est acessible aux admin et aux employés

aspnet_regsql.exe -S .\SQLEXPRESS -E -A all -d BoVoyageDB (commande à rentrer pour qu'il rajoute le rôle manager)

=========================================================================================
14/06/2021 :

On veut faire en sorte que s

Si on se connecte en tant qu'Admin ou commercial on soit rediriger vers l'intranet où on peut faire 
la mise à jour avec le CSV : fait 

on  va essayer de créer des dossiers mais pour ça il faut des clients...
use BoVoyageDB
go 
insert into Client (Id,Nom,email,Prenom) values (NEWID(), Legrand,LegrandVoyageur@email.com,Voyageur)
insert into Client (Id,Nom,email,Prenom) values (NEWID(), Lepetit,LepetitTrotteur@email.com,Trotteur)
go

Id voyage 1 : 5CD4BAED-DE5A-4CB6-A9C7-1906544EE467
id  voyage 2 : 0D814B8D-435B-4CCB-86E5-1EF9C32DB6687

use BoVoyageDB
go 
insert into Dossier (Id,Voyage,Client,Etat) values (NEWID(), 5CD4BAED-DE5A-4CB6-A9C7-1906544EE467,C05CC53D-2696-4065-96FD-AECC5E7D6C9D,0)
insert into Dossier (Id,Voyage,Client,Etat) values (NEWID(), 0D814B8D-435B-4CCB-86E5-1EF9C32DB668,99BFC4E8-497C-4FA7-9544-D4AEF148120B,0)
go


14/06/2021 : 10:47
On a crée deux clients avec chacun un voyage correspondant => on va demander au site web de les afficher

14/06/2021 : 11:20
On a une page dossier qui affiche les dossiers dans la base de données mais que les Id => On va tenter d'aggréger la liste des dossiers des voyages et des clients

14/06/2021 : 11:40
Pas besoin de s'embeter avec une classe on peut utiliser les "jointures"

14/06/2021  : 12:07
On peut maintenant afficher la liste des dossiers dans l'intranet 

14/06/2021 : 13:37
Point avec Ali : il faut que le programme fasse un sweep  des csv dans le dossier, les enregistre, et les supprime ensuite.
Une fonction qui reaffecte le commercial

14/06/2021 : 14:28
J'ai essayé de faire une action qui affecte un commercial à un dossier.
J'ai pour l'instant un problème d'affichage... En effet le fait que le commercial soit null peut poser problème à plusieurs niveaux ce qu'il faudra régler
On repasse sur la question de l'ajout des fichiers.

14/06/2021 : 15:34 
La fonction d'ajout de fichier à la base de données fonctionne. (testée avec 2 fichiers voyages)
La fonction d'ajout d'un commercial à un dossier fonctionne et si on affiche les dossiers on voit le commercial responsable.
On va regrouper et trier les dossiers (cad afficher les dossiers du commerciaux en mettant ceux en cours en haut puis les autres)

14/06/2021 : 16:18
Le fait que le commercial associé à une voyage puisse être nul complique beaucoup les choses puisque le programme plante si on appelle le login d'un employe non défini
On rajoute donc simplement la validation

15/06/2021 : 10:09 La validation du dossier fonctionne

15/06/2021 :11:38
L'organisation en sous listes correspondant à l'employé connecté et aux autres fonctionne.

15/06/2021 : 11:44
On va débuguer et tester l'ajout de commercial

15/06/2021 : 12:05 
Un commercial peut prendre un dossier "vacant" abandonner un dossier qu'il gère

15/06/2021 : 12:13 
On rajoute deux dossiers Non affectés pour tester le tri
use BoVoyageDB
go 
insert into Dossier (Id,Voyage,Client,Etat) values (NEWID(), DD1E74FB-F2E4-4CBD-978D-11A9F484B781,C05CC53D-2696-4065-96FD-AECC5E7D6C9D,0)
insert into Dossier (Id,Voyage,Client,Etat) values (NEWID(), FA9A171D-11AC-4A41-B0D5-C6FB2AE343C2,99BFC4E8-497C-4FA7-9544-D4AEF148120B,0)
go

15/06/2021 : 12:17
Le tri fonctionne bien et les dossiers en cours se retrouvent toujours en haut
On va faire en sorte qu'un dossier accepté ne puisse plus être validé

15/06/2021 : 12:27
Dossiers bien organisés avec les bonnes options de validation qui dépendent de la personne connectée

15/06/2021 : 15:21 
Création d'une page dossier regroupant toutes les infos importantes du dossier pour un voyage (Client, Destination, voyageurs etc...)
Il faut donc construire le lien voyage-> destination
use BoVoyageDB
go 
insert into Destination (Id,Continent,Pays,Region,[Description]) values (NEWID(), 'Europe','Italie','Emilie-Romagne','Bologne','Description 1')
insert into Destination (Id,Continent,Pays,Region,[Description]) values (NEWID(), 'Europe','Italie','Emilie-Romagne','Imola','Description 2')
go

Bologne : BEC53239-E43F-4047-B757-1002992C7069
Imola : 1AC442E6-ADCF-433F-8EC5-CC40B3201CAE
On lorgne à Bologne : DD1E74FB-F2E4-4CBD-978D-11A9F484B781

15/06/2021 : 16:40 
Affichage dossier détaillé avec voyage date destination etc...(voyageurs à rajouter)

16/06/2021 : 09:54
On se lance dans la partie Internet car on a atteint le point où on aimerait bien que lorsqu'on clique sur un voyage en page d'accueil le panier se crée/mette à jour et que si on le valide un dossier se crée dans la base de données 

16/06/2021 : 09:54
La création du panier fonctionne et on y retrouve le voyage qu'on a voulu y mettre. On va faire une version où on peut mettre plusieurs voyages dans le panier.

16/06/2021 : 10:40 
On a fait un lien sur la page principale qui permet d'ajouter des voyages au panier. ça fonctionne.
On va tenter de rajouter un lien qui mène vers la page de connexion client 

16/06/2021 : 11:40 
On a réussi à faire les différentes pages mais le panier disparait quand on se connecte... Va falloir régler ça.

16/06/2021 : 11:59 
Le panier  ne disparait plus. Par contre on a un souci car le client et le User sont deux entités différentes et que j'ai crée le User mais pas le client
Idéalement il faudrait revoir la page de connexion et d'inscription et faire en sorte que lorsqu'un ahceteur s'inscrit il soit automatiquement enregistré comme client.

16/06/2021 : 12:31 
On s'est occupé de la partie où le client peut s'inscrire, se connecter, créer son panier, le valider, le payer et tout ça va apparaitre dans la base de données
et sera consultable sur l'intranet.

16/06/2021 : 13:55
On va faire une page de réservation.

16/06/2021 : 15:20
On liste les voyages sur la page d'accueil.
On peut ensuite cliquer dessus pour réserver et choisir son nombre de voyageurs
POur l'instant ça ramène sur la page d'accueil mais on va faire un formulaire où on demande les détails des voyageurs


16/06/2021 : 18:21
Page réservation avec détails des voyageurs qui se stockent dans la table voyageurs
Pour demain gérer les validations et inclure la mise à jour de la table voyage et voyage voyageurs

17/06/2021 :00:14
On peut faire toutes les étapes de réservation jusqu'au "paiement"
2 soucis pour l'instant :
- J'ai oublié de passer par le panier (ça devrait vite se régler)
- L'état des dossiers ne se met pas à jour quand on paye

17/06/2021 : 9:30
On va régler la question du panier et décaler la déclaration du dossier pour faire en sorte que le dossier ne se crée que quand on valide le panier
(problème je ne veux pas qu'on puisse confirmer sans avoir renseigné les détails des voyageurs, on verra...) 

17/06/2021: 10:30
Les réservations s'ajoutent désormais au panier du client qui s'affiche en entier après chaque nouvelle réservation
Maintenant il faut régler la question du dossier.

17/06/2021 : 10:40
On veut que quand on valide le panier ou qu'on choisisse direct on ait création du dossier + affectation des voyageurs
Pour ça on va créer le dossier au moment où on récupère les infos des voyageurs 

17/06/2021 : 11:04
Gros changement. On va créer un réservation controleur pour toutes les pages où s'occupe d'une réservation particulière

17/06/2021 : 12:33
On a modifié la structure du code pour faire un appel à un ReservationController pour plus de simplicité
ça évite d'avoir à passer les paramètres en cascade 

17/06/2021 :
Le reservation controller fonctionne 